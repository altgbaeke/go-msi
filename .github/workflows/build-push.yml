name: Publish Docker Image

on:
  push:
    branches: [ main ]
  release:
    types:
      - published
        
jobs:

  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out
        uses: actions/checkout@v2
        
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ghcr.io/gbaeke/go-msi
          tag-sha: true
          tag-edge: false
          tag-latest: true
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PASSWORD }}
          
      - name: Build image
        uses: docker/build-push-action@v2
        with:
          tags: ${{ steps.docker_meta.outputs.tags }} 
          file: ./Dockerfile
          
      - name: Monitor image for vulnerabilities with Snyk
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK }}
        with:
          command: test
          image: "ghcr.io/gbaeke/go-msi:main"
          args: --file=Dockerfile --project-name=go-msi 
          
      - name: Push image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          file: ./Dockerfile  

  deploy:
    runs-on: wsl
    environment: myenv
    needs: build

    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Update deployment manifest image
        run: sed -i 's/IMAGE/ghcr.io\/gbaeke\/go-msi:main/g' kind-deployment.yaml
      - name: Set subscription id
        run: sed -i 's/SUBID/${{ secrets.SUBSCRIPTION_ID }}/g' kind-deployment.yaml
      - name: Deploy go-msi
        run: kubectl apply -f kind-deployment.yaml
      - name: Expose deployment
        run: kubectl expose deploy/mymsi-deployment --type LoadBalancer -n mymsi

